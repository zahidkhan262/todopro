{"version":3,"sources":["components/List.js","components/TodoList.js","App.js","index.js"],"names":["List","props","className","mytodo","onClick","id","newEditItem","todoList","find","elem","console","log","setEditAdd","setInputData","setIsEditItem","editTask","icon","faEdit","deleteTask","faTrash","TodoList","useState","inputData","localStorage","getItem","JSON","parse","setTodoList","editTodo","setEditTodo","isEditItem","editAdd","index","updatedItems","filter","item","toast","error","useEffect","setItem","stringify","onSubmit","e","preventDefault","map","success","newTodo","Date","getTime","toString","type","placeholder","value","onChange","target","onKeyPress","keyCode","faArrowAltCircleRight","length","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7644ef5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nconst List = (props) => {\r\n\r\n\r\n    const editTask = (id) => {\r\n        let newEditItem = props.todoList.find((elem) => {\r\n            return elem.id === id\r\n        });\r\n        console.log(newEditItem)\r\n\r\n        props.setEditAdd(false);\r\n        props.setInputData(newEditItem.mytodo);\r\n        props.setIsEditItem(id);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"list d-flex\">\r\n                <p>{props.mytodo}</p>\r\n                <button className=\"btn btn-3\" onClick={() => editTask(props.id)}><FontAwesomeIcon icon={faEdit} /></button>\r\n                <button className=\"btn btn-2\" onClick={() => props.deleteTask(props.id)} ><FontAwesomeIcon icon={faTrash} /></button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React from 'react'\r\nimport List from './List'\r\nimport { useState, useEffect } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleRight, faEdit } from '@fortawesome/free-regular-svg-icons';\r\n\r\n\r\n\r\n\r\n// to get data from local storage\r\n\r\nconst getLsData = () => {\r\n    let list = localStorage.getItem('myLocalItems');\r\n    // console.log(list);\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('myLocalItems'));\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\n\r\nconst TodoList = () => {\r\n\r\n    // states\r\n    const [inputData, setInputData] = useState('');\r\n    const [todoList, setTodoList] = useState(getLsData());\r\n    const [editTodo, setEditTodo] = useState(null);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n    const [editAdd, setEditAdd] = useState(true);\r\n\r\n\r\n\r\n    // -------------------------Add task--------------------------\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        if (!inputData) {\r\n            toast.error('invalid input');\r\n\r\n\r\n        } else if (inputData && !editAdd) {\r\n            setTodoList(\r\n                todoList.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, mytodo: inputData }\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setEditAdd(true);\r\n            setInputData('');\r\n            setIsEditItem(null);\r\n            toast.success('Task Updated')\r\n        } else {\r\n            const newTodo = {\r\n                mytodo: inputData,\r\n                id: new Date().getTime().toString()\r\n            }\r\n            setTodoList([...todoList, newTodo]);\r\n            setInputData('');\r\n            toast('Task Added')\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // ------------------------Add task by button------------------\r\n    const handleKeypress = e => {\r\n        if (e.keyCode === 13) {\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // --------------------------delete task-------------------------\r\n    const deleteTask = (index) => {\r\n        // filtering the data via id\r\n\r\n        const updatedItems = todoList.filter((item) => {\r\n            return index !== item.id;\r\n        })\r\n        toast.error('Task Deleted')\r\n        setTodoList(updatedItems);\r\n    }\r\n\r\n\r\n\r\n    // --------------------delete All task-----------------------------\r\n    const deleteAll = () => {\r\n        setTodoList([]);\r\n\r\n        toast.error('All Task Deleted')\r\n    }\r\n\r\n\r\n    // add task in loacal storage\r\n    useEffect(() => {\r\n        localStorage.setItem('myLocalItems', JSON.stringify(todoList))\r\n    }, [todoList]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"todo_box\">\r\n                    <h2>Todo List</h2>\r\n\r\n\r\n                    <form onSubmit={addTask}>\r\n\r\n                        <input type=\"text\"\r\n                            className=\"input\"\r\n                            placeholder=\"Enter a task here.....\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                            onKeyPress={handleKeypress}\r\n                        />\r\n                        {editAdd ? <button className=\"btn btn-1\"><FontAwesomeIcon icon={faArrowAltCircleRight} /></button> :\r\n                            <button className=\"btn btn-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        }\r\n\r\n                    </form>\r\n\r\n\r\n                    {todoList.length ? todoList.map((elem) =>\r\n                        <List mytodo={elem.mytodo} key={elem.id}\r\n                            id={elem.id}\r\n                            deleteTask={deleteTask}\r\n                            todoList={todoList}\r\n                            editTodo={editTodo}\r\n                            setEditTodo={setEditTodo}\r\n                            setInputData={setInputData}\r\n                            editAdd={editAdd}\r\n                            setEditAdd={setEditAdd}\r\n                            setIsEditItem={setIsEditItem}\r\n                            isEditItem={isEditItem}\r\n\r\n                        />)\r\n\r\n                        : <h2> ðŸš« No Data here...</h2>\r\n                    }\r\n\r\n                    {todoList.length ? <div className=\"show-delete\">\r\n                        <button className=\"btn delete\" onClick={deleteAll}>Delete All</button>\r\n                        {/* <button className=\"btn  watch\" >Watch List</button> */}\r\n                    </div> : null}\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default TodoList\r\n","import './App.css';\nimport TodoList from './components/TodoList';\nimport { ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <>\n      <TodoList />\n\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      {/* Same as */}\n      <ToastContainer />\n    </>\n\n\n\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}