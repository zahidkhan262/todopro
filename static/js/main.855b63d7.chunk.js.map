{"version":3,"sources":["components/List.js","components/TodoList.js","App.js","index.js"],"names":["List","mytodo","inputData","editAdd","setEditAdd","setInputData","setIsEditItem","todoList","id","setTodoList","useState","show","setShow","editTask","handleShow","newEditItem","find","elem","className","onClick","icon","faEdit","index","updatedItems","filter","item","toast","error","deleteTask","faTrash","Modal","onHide","Header","closeButton","Body","type","placeholder","value","onChange","e","target","TodoList","localStorage","getItem","JSON","parse","editTodo","setEditTodo","isEditItem","useEffect","setItem","stringify","onSubmit","preventDefault","map","newTodo","Date","getTime","toString","success","faArrowAltCircleRight","length","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.855b63d7.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from \"react-toastify\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport { faArrowAltCircleRight } from '@fortawesome/free-regular-svg-icons';\r\n\r\n\r\n\r\nconst List = ({ mytodo, editAdd, setEditAdd, inputData, setInputData, setIsEditItem, todoList, id, setTodoList }) => {\r\n\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    // edit task by find method via Id\r\n    const editTask = (id) => {\r\n        handleShow()\r\n      \r\n        let newEditItem = todoList.find((elem) => {\r\n            return elem.id === id\r\n        });\r\n      \r\n\r\n      \r\n        setInputData(newEditItem.mytodo);\r\n        // pass id in isEditItem via setIsEditItem\r\n        setIsEditItem(id);\r\n    }\r\n\r\n    //Delete Todo by filter method via id\r\n    const deleteTask = (index) => {\r\n\r\n        const updatedItems = todoList.filter((item) => {\r\n            return index !== item.id;\r\n        })\r\n        toast.error('Task Deleted')\r\n        setTodoList(updatedItems);\r\n    }\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => setShow(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"list d-flex\">\r\n                <p>{mytodo}</p>\r\n                <button className=\"btn-11 btn-3\" onClick={() => editTask(id)}><FontAwesomeIcon icon={faEdit} /></button>\r\n                <button className=\"btn-11 btn-2\" onClick={() => deleteTask(id)} ><FontAwesomeIcon icon={faTrash} /></button>\r\n            </div>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton />\r\n                <Modal.Body>\r\n                    <input type=\"text\"\r\n                        className=\"input\"\r\n                        placeholder=\"Enter a task here.....\"\r\n                        value={inputData}\r\n                        onChange={(e) => setInputData(e.target.value)}\r\n                    />\r\n                   \r\n                    <button className=\"btn-11 btn-3\" onClick={() => editTask(id)}><FontAwesomeIcon icon={faEdit} /></button>\r\n                   \r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default List\r\n","import React from 'react'\r\nimport List from './List'\r\nimport { useState, useEffect } from 'react';\r\nimport { toast } from \"react-toastify\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowAltCircleRight, faEdit } from '@fortawesome/free-regular-svg-icons';\r\n\r\n\r\n\r\n// to get data from local storage\r\n\r\nconst getLsData = () => {\r\n    let list = localStorage.getItem('myLocalItems');\r\n    // console.log(list);\r\n    if (list) {\r\n        return JSON.parse(localStorage.getItem('myLocalItems'));\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\n\r\nconst TodoList = () => {\r\n\r\n    // states\r\n    const [inputData, setInputData] = useState('');\r\n    const [todoList, setTodoList] = useState(getLsData());\r\n    const [editTodo, setEditTodo] = useState(null);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n    const [editAdd, setEditAdd] = useState(true);\r\n\r\n\r\n\r\n    // -------------------------Add task--------------------------\r\n    const addTask = (e) => {\r\n        e.preventDefault();\r\n        if (!inputData) {\r\n            toast.error('invalid input');\r\n        } else if (inputData && !editAdd) {\r\n            setTodoList(\r\n                todoList.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, mytodo: inputData }\r\n                    }\r\n                    return elem;\r\n                })\r\n            )\r\n            setEditAdd(true);\r\n            setInputData('');\r\n            setIsEditItem(null);\r\n            toast('Task Updated')\r\n        } else {\r\n            const newTodo = {\r\n                mytodo: inputData,\r\n                id: new Date().getTime().toString()\r\n            }\r\n            setTodoList([...todoList, newTodo]);\r\n            setInputData('');\r\n            toast.success('Task Added')\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // --------------------delete All task-----------------------------\r\n    const deleteAll = () => {\r\n        setTodoList([]);\r\n\r\n        toast.error('All Task Deleted')\r\n    }\r\n\r\n\r\n    // add task in loacal storage\r\n    useEffect(() => {\r\n        localStorage.setItem('myLocalItems', JSON.stringify(todoList))\r\n    }, [todoList]);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"todo_box\">\r\n                    <h2>Todo List</h2>\r\n\r\n\r\n                    <form onSubmit={addTask}>\r\n\r\n                        <input type=\"text\"\r\n                            className=\"input\"\r\n                            placeholder=\"Enter a task here.....\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            editAdd \r\n                            ? <button className=\"btn-11 btn-1\"><FontAwesomeIcon icon={faArrowAltCircleRight} /></button> \r\n                            : <button type='submit' className=\"btn-11 btn-1\"><FontAwesomeIcon icon={faEdit} /></button>\r\n                        }\r\n                    </form>\r\n\r\n\r\n                    {todoList.length >0 ? todoList.map((elem) =>\r\n                        <List\r\n                            mytodo={elem.mytodo} \r\n                            key={elem.id}\r\n                            id={elem.id}\r\n                            inputData={inputData}\r\n                            setTodoList={setTodoList}\r\n                            todoList={todoList}\r\n                            editTodo={editTodo}\r\n                            setEditTodo={setEditTodo}\r\n                            setInputData={setInputData}\r\n                            editAdd={editAdd}\r\n                            setEditAdd={setEditAdd}\r\n                            setIsEditItem={setIsEditItem}\r\n                            isEditItem={isEditItem}\r\n\r\n                        />)\r\n\r\n                        : <h2> 🚫 No Data here...</h2>\r\n                    }\r\n\r\n                    {\r\n                        todoList.length >0\r\n                        ? <div className=\"show-delete\">\r\n                            <button className=\"btn-11 delete\" onClick={deleteAll}>Delete All</button>\r\n                            {/* <button className=\"btn  watch\" >Watch List</button> */}\r\n                          </div> \r\n                        : null\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default TodoList\r\n","import './App.css';\r\nimport TodoList from './components/TodoList';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <TodoList />\r\n\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n    </>\r\n\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}